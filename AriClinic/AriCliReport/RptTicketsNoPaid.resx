<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=5.0.11.510, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
    <value>0.1in</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>