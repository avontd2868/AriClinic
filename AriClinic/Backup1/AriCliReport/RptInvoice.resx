<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3GMfOtws/g8XEG9Cwzg2owAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=5.0.11.316, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
    <value>0.1in</value>
  </metadata>
</root>